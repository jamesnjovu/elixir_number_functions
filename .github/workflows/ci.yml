name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  MIX_ENV: test

jobs:
  test:
    name: Test (Elixir ${{matrix.elixir}} / OTP ${{matrix.otp}})
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          # Latest stable versions
          - elixir: '1.16'
            otp: '26'
            coverage: true
          # Previous stable versions for compatibility
          - elixir: '1.15'
            otp: '25'
          - elixir: '1.14'
            otp: '24'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile dependencies
      run: mix deps.compile

    - name: Compile project
      run: mix compile --warnings-as-errors

    - name: Check formatting
      run: mix format --check-formatted

    - name: Run fast tests
      run: mix test.numberf_fast --cover

    - name: Generate coverage report
      if: matrix.coverage
      run: |
        mix test --cover --export-coverage default
        mix test.coverage

    - name: Upload coverage to Codecov
      if: matrix.coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./cover/excoveralls.json
        fail_ci_if_error: false

  comprehensive-tests:
    name: Comprehensive Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-comprehensive-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-comprehensive-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile

    - name: Run all tests (including performance and benchmarks)
      run: mix test.numberf_all --slowest 20

  property-tests:
    name: Property-Based Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-property-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-property-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile

    - name: Run property-based tests
      run: mix test --only property --timeout 120000

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-integration-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-integration-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile

    - name: Run integration tests
      run: mix test test/integration/ --timeout 120000

    - name: Run real-world scenario tests
      run: mix test test/integration/real_world_scenarios_test.exs --timeout 180000

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-performance-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-performance-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile

    - name: Run performance tests
      run: mix test --only performance --timeout 300000

    - name: Run benchmark tests
      run: mix test --only benchmark --timeout 300000

  doctests:
    name: Documentation Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-doctests-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-doctests-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile

    - name: Run doctests
      run: mix test test/doctests/

    - name: Generate documentation
      run: mix docs

  concurrency-tests:
    name: Concurrency Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-concurrency-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-concurrency-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile

    - name: Run concurrency tests
      run: mix test test/concurrency/ --timeout 180000

  coverage-analysis:
    name: Coverage Analysis
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-coverage-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-coverage-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile

    - name: Run coverage analysis tests
      run: mix test test/coverage/ --cover

    - name: Generate detailed coverage report
      run: |
        mix test --cover --export-coverage default
        mix test.coverage --min-coverage 80

  quality-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-quality-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-quality-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile project
      run: mix compile

    - name: Check unused dependencies
      run: mix deps.unlock --check-unused

    - name: Security audit
      run: mix deps.audit

    - name: Check for compilation warnings
      run: mix compile --force --warnings-as-errors

    - name: Run Credo (if available)
      run: |
        if mix help credo >/dev/null 2>&1; then
          mix credo --strict
        else
          echo "Credo not available, skipping..."
        fi
      continue-on-error: true

    - name: Run Dialyzer (if available)
      run: |
        if mix help dialyzer >/dev/null 2>&1; then
          mix dialyzer
        else
          echo "Dialyzer not available, skipping..."
        fi
      continue-on-error: true
